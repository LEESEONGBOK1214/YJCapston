<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.jmjapp"
    android:targetSandboxVersion="2"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="30" />

    <permission
        android:name="com.example.jmjapp.permission.MAPS_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="org.techtown.location.permission.MAPS_RECEIVE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />

    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.camera.front"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.camera.flash"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.screen.landscape"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false" />

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <application
        android:name="com.example.jmjapp.JMJApplication"
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true" >
        <activity android:name="com.example.jmjapp.user.OrderActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.ShopUpdateActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.BasketActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.MenuChoosedActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.MenuRegisterActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.MenuDetailActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.ListShopActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.OwnerLoginActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.MembershipWithdrawal" />
        <activity android:name="com.example.jmjapp.user.RecordZzim" />
        <activity android:name="com.example.jmjapp.user.RecordReview" />
        <activity android:name="com.example.jmjapp.user.RecordVisit" />
        <activity android:name="com.example.jmjapp.user.RecordPoint" />
        <activity android:name="com.example.jmjapp.user.OperationGuideActivity" />
        <activity android:name="com.example.jmjapp.user.CustomerServiceActivity" />
        <activity android:name="com.example.jmjapp.user.NoticeActivity" />

        <uses-library android:name="com.google.android.maps" />
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyDzrU6ZybJOo_RtvrYo7o_Koown_2Ow_1g" />
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity android:name="com.example.jmjapp.user.MainActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.MenuActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.BellActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.QrReaderActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.ProfileUpdateActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.IntroScreen" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.jmjapp.user.CaptureAct"
            android:screenOrientation="fullSensor"
            android:stateNotNeeded="true"
            android:windowSoftInputMode="stateAlwaysHidden" >
        </activity>
        <activity android:name="com.example.jmjapp.user.LoginActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.MainActivity_O" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.RegisterNoActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.RegisterShopActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.JoinActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.user.ShopDetailActivity" >
        </activity> <!-- <activity android:name=".user.LogoutActivity"> -->
        <!-- </activity> -->
        <activity android:name="com.example.jmjapp.owner.OwnerJoinActivity" >
        </activity>
        <activity android:name="com.example.jmjapp.owner.WebViewActivity" >
        </activity>
        <activity
            android:name="com.lakue.lakuepopupactivity.PopupActivity"
            android:theme="@android:style/Theme.Dialog" />
        <activity
            android:name="com.nhn.android.naverlogin.ui.OAuthLoginActivity"
            android:theme="@style/Theme.AppCompat.Light.Dialog" />
        <activity
            android:name="com.nhn.android.naverlogin.ui.OAuthLoginInAppBrowserActivity"
            android:configChanges="orientation|screenSize"
            android:label="OAuth2.0 In-app" />
        <activity
            android:name="com.nhn.android.naverlogin.ui.OAuthCustomTabActivity"
            android:configChanges="orientation|screenSize"
            android:launchMode="singleTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <!-- Intent URL 에서 로그인 액티비티를 실행하기 위해 설정 -->
                <data
                    android:host="authorize"
                    android:path="/"
                    android:scheme="naver3rdpartylogin" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.journeyapps.barcodescanner.CaptureActivity"
            android:clearTaskOnLaunch="true"
            android:screenOrientation="sensorLandscape"
            android:stateNotNeeded="true"
            android:theme="@style/zxing_CaptureTheme"
            android:windowSoftInputMode="stateAlwaysHidden" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.google.firebase.auth.internal.FederatedSignInActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleTask"
            android:permission="com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
            Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.example.jmjapp.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />
    </application>

</manifest>