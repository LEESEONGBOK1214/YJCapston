// Generated by view binder compiler. Do not edit!
package com.example.jmjapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.jmjapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyOrderListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView22;

  @NonNull
  public final ConstraintLayout layoutMenu2;

  @NonNull
  public final TextView myOrderListDate;

  @NonNull
  public final ConstraintLayout myOrderListDetail;

  @NonNull
  public final TextView myOrderListIsAccept;

  @NonNull
  public final TextView myOrderListShopName;

  private MyOrderListBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageView22,
      @NonNull ConstraintLayout layoutMenu2, @NonNull TextView myOrderListDate,
      @NonNull ConstraintLayout myOrderListDetail, @NonNull TextView myOrderListIsAccept,
      @NonNull TextView myOrderListShopName) {
    this.rootView = rootView;
    this.imageView22 = imageView22;
    this.layoutMenu2 = layoutMenu2;
    this.myOrderListDate = myOrderListDate;
    this.myOrderListDetail = myOrderListDetail;
    this.myOrderListIsAccept = myOrderListIsAccept;
    this.myOrderListShopName = myOrderListShopName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyOrderListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyOrderListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_order_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyOrderListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView22;
      ImageView imageView22 = rootView.findViewById(id);
      if (imageView22 == null) {
        break missingId;
      }

      ConstraintLayout layoutMenu2 = (ConstraintLayout) rootView;

      id = R.id.my_order_list_date;
      TextView myOrderListDate = rootView.findViewById(id);
      if (myOrderListDate == null) {
        break missingId;
      }

      id = R.id.my_order_list_detail;
      ConstraintLayout myOrderListDetail = rootView.findViewById(id);
      if (myOrderListDetail == null) {
        break missingId;
      }

      id = R.id.my_order_list_isAccept;
      TextView myOrderListIsAccept = rootView.findViewById(id);
      if (myOrderListIsAccept == null) {
        break missingId;
      }

      id = R.id.my_order_list_shopName;
      TextView myOrderListShopName = rootView.findViewById(id);
      if (myOrderListShopName == null) {
        break missingId;
      }

      return new MyOrderListBinding((ConstraintLayout) rootView, imageView22, layoutMenu2,
          myOrderListDate, myOrderListDetail, myOrderListIsAccept, myOrderListShopName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
