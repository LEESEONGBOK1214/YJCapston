
#port
server.port=8088

#Entity ����� �ٲ�� ���̺�� ����Ʈ �϶�� ��. ������ ������ �Ʒ� ��� ����ϰų� none��� �����Ѵ�.
spring.jpa.hibernate.ddl-auto=none
# 테이블은 자동생성 사용하지 않고 쿼리문을 이용하기로 한다.

#sql��� ������.
spring.jpa.show-sql=true

# Ŀ�ؼ� ��ü�� �ִ� �� 4���� ����ϰڴٴ� �ǹ�
spring.datasource.driver-class-name= org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/local_jumanji
#spring.datasource.username=abd9757
#spring.datasource.password=dl12031203
spring.datasource.url=jdbc:mariadb://springboot-aws-caps.cd5hnl5ycfyg.ap-northeast-2.rds.amazonaws.com:3306/jumanji
spring.datasource.username=abd9757
spring.datasource.password=dl12031203
spring.datasource.hikari.maximum-pool-size=4

#file size
spring.servlet.multipart.max-file-size=500KB
spring.servlet.multipart.max-request-size=500KB
storage.location=uploads

# google oauth
spring.security.oauth2.client.registration.google.client-id=1048529450072-biomd2b5ak4h1l94m0sqvmgvcc7eilf7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=7W5o5kx7rC8d--LLuTonHFRq
spring.security.oauth2.client.registration.google.scope=email,profile
# facebook oauth
spring.security.oauth2.client.registration.facebook.client-id=236307958205086
spring.security.oauth2.client.registration.facebook.client-secret=4c095275dcfbcf8c3898fc13a06efbbf
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
# naver oauth
spring.security.oauth2.client.registration.naver.client-id=3DwdaAu9DxPsYTNgPQGD
spring.security.oauth2.client.registration.naver.client-secret=Fop9WootlX
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# redirect-uri : 네이버 개발자 api 설정에 callback URL과 같아야함.
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8088/login/oauth2/code/naver

# oauth provider 추가
#authorization-uri  : login창 uri
#token 요청 uri
#user-name-attribute >>>       google : sub, facebook : id, naver : response
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


#Encoding UTF-8
server.servlet.encoding.charset=UTF-8
server.tomcat.uri-encoding=UTF-8


# oracle DB connection properties
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# oracle 12g 이상부턴 유저명 앞에 c##을붙여줘야함
# 11G 이하
#spring.datasource.username=jumanji
# 12G 이상
#spring.datasource.username=c##jumanji
#spring.datasource.password=jumanji