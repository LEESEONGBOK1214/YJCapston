// Generated by view binder compiler. Do not edit!
package com.example.jmjapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.jmjapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InfoItemViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout layoutInfo;

  @NonNull
  public final TextView tvInfoContent;

  @NonNull
  public final TextView tvInfoName;

  private InfoItemViewBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout layoutInfo,
      @NonNull TextView tvInfoContent, @NonNull TextView tvInfoName) {
    this.rootView = rootView;
    this.layoutInfo = layoutInfo;
    this.tvInfoContent = tvInfoContent;
    this.tvInfoName = tvInfoName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InfoItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InfoItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.info_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InfoItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout layoutInfo = (LinearLayout) rootView;

      id = R.id.tv_info_content;
      TextView tvInfoContent = rootView.findViewById(id);
      if (tvInfoContent == null) {
        break missingId;
      }

      id = R.id.tv_info_name;
      TextView tvInfoName = rootView.findViewById(id);
      if (tvInfoName == null) {
        break missingId;
      }

      return new InfoItemViewBinding((LinearLayout) rootView, layoutInfo, tvInfoContent,
          tvInfoName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
