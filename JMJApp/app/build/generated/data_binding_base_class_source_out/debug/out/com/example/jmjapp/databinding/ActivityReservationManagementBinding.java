// Generated by view binder compiler. Do not edit!
package com.example.jmjapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.jmjapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReservationManagementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView resManageList;

  @NonNull
  public final Toolbar resManageToolbar;

  @NonNull
  public final TextView tvBell;

  private ActivityReservationManagementBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView resManageList, @NonNull Toolbar resManageToolbar,
      @NonNull TextView tvBell) {
    this.rootView = rootView;
    this.resManageList = resManageList;
    this.resManageToolbar = resManageToolbar;
    this.tvBell = tvBell;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReservationManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReservationManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reservation_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReservationManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.res_manage_list;
      RecyclerView resManageList = rootView.findViewById(id);
      if (resManageList == null) {
        break missingId;
      }

      id = R.id.res_manage_toolbar;
      Toolbar resManageToolbar = rootView.findViewById(id);
      if (resManageToolbar == null) {
        break missingId;
      }

      id = R.id.tv_bell;
      TextView tvBell = rootView.findViewById(id);
      if (tvBell == null) {
        break missingId;
      }

      return new ActivityReservationManagementBinding((ConstraintLayout) rootView, resManageList,
          resManageToolbar, tvBell);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
