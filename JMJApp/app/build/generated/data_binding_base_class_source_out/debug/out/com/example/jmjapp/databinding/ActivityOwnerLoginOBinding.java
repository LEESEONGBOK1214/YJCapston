// Generated by view binder compiler. Do not edit!
package com.example.jmjapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.jmjapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOwnerLoginOBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etOwnerId;

  @NonNull
  public final Button etOwnerJoin;

  @NonNull
  public final EditText etOwnerPw;

  @NonNull
  public final TextView findidpw1;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final Toolbar loginToolbar;

  @NonNull
  public final Button ownerLoginButton;

  private ActivityOwnerLoginOBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText etOwnerId, @NonNull Button etOwnerJoin, @NonNull EditText etOwnerPw,
      @NonNull TextView findidpw1, @NonNull ImageView imageView10, @NonNull Toolbar loginToolbar,
      @NonNull Button ownerLoginButton) {
    this.rootView = rootView;
    this.etOwnerId = etOwnerId;
    this.etOwnerJoin = etOwnerJoin;
    this.etOwnerPw = etOwnerPw;
    this.findidpw1 = findidpw1;
    this.imageView10 = imageView10;
    this.loginToolbar = loginToolbar;
    this.ownerLoginButton = ownerLoginButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOwnerLoginOBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOwnerLoginOBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_owner_login_o, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOwnerLoginOBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_owner_id;
      EditText etOwnerId = rootView.findViewById(id);
      if (etOwnerId == null) {
        break missingId;
      }

      id = R.id.et_owner_join;
      Button etOwnerJoin = rootView.findViewById(id);
      if (etOwnerJoin == null) {
        break missingId;
      }

      id = R.id.et_owner_pw;
      EditText etOwnerPw = rootView.findViewById(id);
      if (etOwnerPw == null) {
        break missingId;
      }

      id = R.id.findidpw1;
      TextView findidpw1 = rootView.findViewById(id);
      if (findidpw1 == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = rootView.findViewById(id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.login_toolbar;
      Toolbar loginToolbar = rootView.findViewById(id);
      if (loginToolbar == null) {
        break missingId;
      }

      id = R.id.owner_login_button;
      Button ownerLoginButton = rootView.findViewById(id);
      if (ownerLoginButton == null) {
        break missingId;
      }

      return new ActivityOwnerLoginOBinding((ConstraintLayout) rootView, etOwnerId, etOwnerJoin,
          etOwnerPw, findidpw1, imageView10, loginToolbar, ownerLoginButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
