// Generated by view binder compiler. Do not edit!
package com.example.jmjapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.jmjapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMembershipWithdrawalBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Toolbar bellToolbar;

  @NonNull
  public final Button buttonWithdrawal;

  @NonNull
  public final CheckBox cbCoupon;

  @NonNull
  public final TextView textView30;

  @NonNull
  public final TextView textView31;

  @NonNull
  public final TextView textView32;

  @NonNull
  public final TextView textView33;

  @NonNull
  public final TextView tvBell;

  private ActivityMembershipWithdrawalBinding(@NonNull ConstraintLayout rootView,
      @NonNull Toolbar bellToolbar, @NonNull Button buttonWithdrawal, @NonNull CheckBox cbCoupon,
      @NonNull TextView textView30, @NonNull TextView textView31, @NonNull TextView textView32,
      @NonNull TextView textView33, @NonNull TextView tvBell) {
    this.rootView = rootView;
    this.bellToolbar = bellToolbar;
    this.buttonWithdrawal = buttonWithdrawal;
    this.cbCoupon = cbCoupon;
    this.textView30 = textView30;
    this.textView31 = textView31;
    this.textView32 = textView32;
    this.textView33 = textView33;
    this.tvBell = tvBell;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMembershipWithdrawalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMembershipWithdrawalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_membership_withdrawal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMembershipWithdrawalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bell_toolbar;
      Toolbar bellToolbar = rootView.findViewById(id);
      if (bellToolbar == null) {
        break missingId;
      }

      id = R.id.button_withdrawal;
      Button buttonWithdrawal = rootView.findViewById(id);
      if (buttonWithdrawal == null) {
        break missingId;
      }

      id = R.id.cb_coupon;
      CheckBox cbCoupon = rootView.findViewById(id);
      if (cbCoupon == null) {
        break missingId;
      }

      id = R.id.textView30;
      TextView textView30 = rootView.findViewById(id);
      if (textView30 == null) {
        break missingId;
      }

      id = R.id.textView31;
      TextView textView31 = rootView.findViewById(id);
      if (textView31 == null) {
        break missingId;
      }

      id = R.id.textView32;
      TextView textView32 = rootView.findViewById(id);
      if (textView32 == null) {
        break missingId;
      }

      id = R.id.textView33;
      TextView textView33 = rootView.findViewById(id);
      if (textView33 == null) {
        break missingId;
      }

      id = R.id.tv_bell;
      TextView tvBell = rootView.findViewById(id);
      if (tvBell == null) {
        break missingId;
      }

      return new ActivityMembershipWithdrawalBinding((ConstraintLayout) rootView, bellToolbar,
          buttonWithdrawal, cbCoupon, textView30, textView31, textView32, textView33, tvBell);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
